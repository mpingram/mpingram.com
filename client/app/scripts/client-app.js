$(document).ready( function init(){

	// TODO (consider): You don't really need jquery here!
	// consider removing when optimizing site
	// IF network says its an issue

	// stores local variables which track
	// the page's state
	var locals = {};
	// stores active popin box
	locals.activeBox = undefined;
	// stores active location
	locals.iconsLocation = undefined;
	// stores whether about-skills svg lines have been drawn
	locals.svgLinesDrawn = false;
	// for about box svg lines:
	// map skills to technologies
	locals.skillsTechTable = {};
	// stores whether bandcamp iframe has been loaded
	locals.musicPlayerLoaded = false;



	// --------------------
	var $icons = $('#icons');
	var $centerpiece = $('#centerpiece');
	var $contactBox = $('#contact-box');



	var boxLocationTable = {
		'#projects-box':'left',
		'#about-box':'right',
		'#music-box':'up',
		'#websites-box':'down'
	};
	// ------------------




	// I: HELPER FUNCTIONS
	// ================================================

	// move centerpiece and popin boxes back to neutral
	var reset = function(){
		locals.iconsLocation = undefined;
		locals.activeBox = undefined;
		$contactBox.addClass('hidden');
		$centerpiece.removeClass('collapsed contact-active');
		$icons.removeClass('up down left right hidden');
		$('.active').removeClass('active');
	};

	// move centerpiece, icons, and popin boxes
	var move = function(){
		$contactBox.addClass('hidden');
		locals.iconsLocation = boxLocationTable[locals.activeBox.selector];
		$centerpiece.addClass('collapsed');
		$icons.removeClass().addClass(locals.iconsLocation);
		locals.activeBox.addClass('active').siblings().removeClass('active');
	};


	// handle clicks on icons
	var iconClickHandler = function(event){
		var id = event.currentTarget.id;
		if (id === 'about'){
			drawAboutBoxSvg();
		}
		// identify popin box associated with icon id
		locals.activeBox = $('#'+id+'-box'); 
		// if box is already open, close it and move the center back to neutral
		if(locals.activeBox.hasClass('active')){
			reset();
		} else {
			move();
		}
	};

	// handle links to the contact form
	var contactBoxClickHandler = function(event){
		reset();
		$centerpiece.removeClass('collapsed').addClass('contact-active');
		$contactBox.toggleClass('hidden');
		$icons.toggleClass('hidden');
	};

	// handle swipe events generated by hammer.js
	var hammerSwipeHandler = function(event){

		// if event direction is not 'no direction'
		if(event.direction !== 1){

			// match swipe value to direction ('left','right','up','down')
			var swipe = swipeTable[event.direction];

			if (!locals.activeBox){
				$(swipe.opens).trigger('click');
			} else if (locals.activeBox.selector === swipe.closes){
				reset();
			}

		}
	};

	// SVG LINE DRAWING
	// ----------------------------



	function drawAboutBoxSvg(){
		if(locals.svgLinesDrawn === true){
			redrawAboutBoxSvg();
		} else {
			createAboutBoxSvg();
		}
	}

	function redrawAboutBoxSvg(){
		svgLineDrawer.reinitialize();
		drawLines();
	} 

	function createAboutBoxSvg(){

		// stick each tech jQuery element into container object, we'll need it soon.
		locals.techElements = {};
		$('#about-tech-column').find('.about-tech-item').each(function(index, elem){
			locals.techElements['$' + elem.id] = $(this);
		});

		// keep track of which techs map to which skills
		locals.skillTechTable = {
			'webApps': [
				locals.techElements.$javascript,
				locals.techElements.$typescript,
				locals.techElements.$angularJS,
				locals.techElements.$jQuery,
				locals.techElements.$html,
				locals.techElements.$css,
			],
			'restApi': [
				locals.techElements.$javascript,
				locals.techElements.$nodeJS,
				locals.techElements.$expressJS,
			],
			'server': [
				locals.techElements.$javascript,
				locals.techElements.$typescript,
				locals.techElements.$nodeJS,
				locals.techElements.$expressJS,
				locals.techElements.$mongoDB,
				locals.techElements.$mongoose,
				locals.techElements.$mySQL,
			],
			'webDeployment': [
				locals.techElements.$git,
				locals.techElements.$AWS,
				locals.techElements.$taskRunners,
			],
			'webDesign': [
				locals.techElements.$html,
				locals.techElements.$css,
				locals.techElements.$illustrator, 
			],
			'frontend': [
				locals.techElements.$html,
				locals.techElements.$css,
				locals.techElements.$javascript,
				locals.techElements.$typescript,
				locals.techElements.$jQuery,
				locals.techElements.$taskRunners,
			],
		};
		
		// create svgLineDrawer instance
		var $svgContainer = $('#svg-container');
		svgLineDrawer = createSvgLineDrawer($svgContainer, 'about-skills-svg');


		drawLines();	
	}

	function drawLines(){

		// iterate over skill elements and draw lines connecting them to associated tech elements
		$('#about-skills-column').find('.about-skills-item').each(function(){

			var $skillElement = $(this);
			var skillname = $skillElement[0].id;
			var associatedTechElements = locals.skillTechTable[skillname];
			var lineClass = 'about-skills-line ' + skillname + '-line';

			$.each(associatedTechElements, function(i, $techElement){
				svgLineDrawer.drawLine(	[$skillElement,'mid-right'],
										[$techElement, 'mid-left'],
										null,
										lineClass);
			});
		});

		locals.svgLinesDrawn = true;
	}


	// highlight svg lines and tech boxes on associated skill hover
	function skillsItemHoverHandler(event){
		// highlight svg lines
		var skillName = event.currentTarget.id;
		var lineClass = '.' + skillName + '-line';
		$(lineClass).toggleClass('highlight');

		// highlight tech items
		var techItemsArray = locals.skillTechTable[skillName];
		for (var i=0;i<techItemsArray.length;i++){
			techItemsArray[i].toggleClass('highlight');
		}

	}
	// create iframe for bandcamp player
	function loadBandcampPlayer(){

		// DEBUG: does this block?

		// grab container
		var musicPlayerContainer = $('#music-player-container');

		// generate bandcamp player iframe
		var player = document.createElement('iframe');
		player.src = 'https://bandcamp.com/EmbeddedPlayer/album=2571936169/size=large/bgcol=ffffff/linkcol=0687f5/minimal=true/transparent=true/';
		player.setAttribute('seamless','');
		player.classList.add('music-player');

		// add link to bandcamp page to iframe
		var bcLink = document.createElement('a');
		bcLink.href = 'http://nominal.bandcamp.com/album/apartments-ep';
		player.appendChild(bcLink);

		// put iframe in container element,
		musicPlayerContainer.append(player);
		// remove loading.gif background
		musicPlayerContainer.css('background', 'none');

		// update local variable, we've loaded the player
		// locals.musicPlayerLoaded = true;
	}





	// II. EVENT HANDLERS
	// ====================

	

	
	// hammerjs initialization and swipe handlers
	// ----------------------
	var bodyContainer = document.getElementById('body-wrapper');
	var centerContainer = document.getElementById('center-container');
	var aboutBox = document.getElementById('about-box');
	var projectsBox = document.getElementById('projects-box');
	var musicBox = document.getElementById('music-box');
	var musicBoxPullTab = document.getElementById('music-box-pull-tab');
	var websitesBox = document.getElementById('websites-box');
	var websitesBoxPullTab = document.getElementById('websites-box-pull-tab');

	var hammerManagers = {};
	hammerManagers.centerContainer = new Hammer.Manager(centerContainer,{
		preset: [],
		domEvents: false,
		touchAction: 'pan-y',
		recognizers: [
			[Hammer.Swipe, {direction: Hammer.DIRECTION_ALL}]
		]
	});
	hammerManagers.aboutBox = new Hammer.Manager(aboutBox, {
		preset: [],
		domEvents: false,
		touchAction: 'pan-y',
		recognizers: [
			[Hammer.Swipe, {direction: Hammer.DIRECTION_LEFT}]
		]
	});
	hammerManagers.projectsBox = new Hammer.Manager(projectsBox, {
		preset: [],
		domEvents: false,
		touchAction: 'pan-y',
		recognizers: [
			[Hammer.Swipe, {direction: Hammer.DIRECTION_RIGHT}]
		]
	});
	hammerManagers.musicBoxPullTab = new Hammer.Manager(musicBoxPullTab, {
		preset: [],
		domEvents: false,
		touchAction: 'pan-y',
		recognizers: [
			[Hammer.Swipe, {direction: Hammer.DIRECTION_DOWN}]
		]
	});
	hammerManagers.websitesBoxPullTab = new Hammer.Manager(websitesBoxPullTab, {
		preset: [],
		domEvents: false,
		touchAction: 'pan-y',
		recognizers: [
			[Hammer.Swipe, {direction: Hammer.DIRECTION_UP}]
		]
	});

	
	var swipeTable = {
		2:{ // right swipe
			 'opens': '#projects',
			 'closes': '#about-box'
			},
		4:{ // left swipe
			'opens': '#about',
			'closes': '#projects-box'
			},
		8:{ // downward swipe
			'opens': '#music',
			'closes': '#websites-box'
			},
		16:{ // upward swipe
			'opens': '#websites',
			'closes':'#music-box'
			}
	};

	// hammerjs event handling
	// ------------------------------------
	hammerManagers.centerContainer.on('swipe', hammerSwipeHandler);
	hammerManagers.aboutBox.on('swipe', hammerSwipeHandler);
	hammerManagers.projectsBox.on('swipe', hammerSwipeHandler);
	hammerManagers.musicBoxPullTab.on('swipe', hammerSwipeHandler);
	hammerManagers.websitesBoxPullTab.on('swipe', hammerSwipeHandler);
	



	// jquery click event handlers
	// ---------------------------
	var $document = $(document);
	$document.on('click', '.contact-button', contactBoxClickHandler );
	$document.on('click', '#websites, #projects, #music, #about', iconClickHandler );
	$document.on('mouseenter mouseleave touchstart touchend', '.about-skills-item', skillsItemHoverHandler);
	$document.on('click', '#contact-cancel', reset);
	$(centerContainer).on('dblclick', reset);



	// contact-form submission event handler
	var $contactForm = $('#contact-form');
	$contactForm.on('submit', function(event){
		// stop the browser from trying to do the same thing
		event.preventDefault();
		// send the data
		$.ajax({
			type: 'POST',
			url: 'contact',
			data: $(this).serialize(),
		});
		// close the contact form
		reset();
	});

	// window event handlers
	// -----------------------------
	
	$(window).load(loadBandcampPlayer);
	// redraw about-skill svg lines on window resize
	window.onresize = redrawAboutBoxSvg;
	

	// end EVENT HANDLERS
	// ======================

// end document.ready
});
